<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.d3.auth.mapper.UserMapper">

    <!-- 基础result map -->
    <resultMap id="BaseResultMap" type="com.github.d3.auth.entity.user.UserEntity">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="locked" jdbcType="TINYINT" property="locked"/>
        <result column="expire_at" jdbcType="TIMESTAMP" property="expireAt"/>
        <result column="external_id" jdbcType="BIGINT" property="externalId"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_by_id" jdbcType="BIGINT" property="createById"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_by_id" jdbcType="BIGINT" property="updateById"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="BIGINT" property="deleteFlag"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>

    <!-- 带凭证的结果map -->
    <resultMap id="CredentialsResultMap" type="com.github.d3.auth.entity.user.UserEntity" extends="BaseResultMap">
        <result column="credentials" jdbcType="VARCHAR" property="credentials"/>
    </resultMap>

    <!-- 根据账号信息查询用户(查询结果附带凭证) -->
    <select id="loadUserWithCredentials" resultMap="CredentialsResultMap" parameterType="java.lang.String">
        select u.id,
               u.name,
               u.user_type,
               u.phone,
               u.email,
               u.locked,
               u.expire_at,
               u.external_id,
               u.create_by,
               u.create_by_id,
               u.create_time,
               u.update_by,
               u.update_by_id,
               u.update_time,
               u.delete_flag,
               u.version,
               uc.credentials
        from (select user_id
              from user_account
              where account = #{account,jdbcType=VARCHAR}
                and enabled = 1
                and delete_flag = 0) ua
                 inner join user u
                            on u.id = ua.user_id
                 left join user_credentials uc
                           on ua.user_id = uc.user_id and uc.credentials_type = 0
    </select>

</mapper>
